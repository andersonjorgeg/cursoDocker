#escolhendo a versão do docker compose
version: '3'

#criação do volume
volumes: 
    dados: 

#criando as redes
networks: 
    banco:
    web:
    fila: 
#criando os serviços
services: 
    #serviço bando de dados
    db: 
        image: postgres:9.6
        #foi adicionado uma variável de ambiente para conectar o banco
        environment: 
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=db
        volumes: 
            # Volumes dos dados 
            - dados:/var/lib/postgresql/data
            # Scripts
            - ./scripts:/scripts
            # mapeando o script de inicialização do db
            - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

        #determina que a rede banco pertence somente ao db
        networks: 
            - banco
    #serviço frontend
    frontend: 
        image: nginx:1.13
        volumes: 
            #site
            - ./web:/usr/share/nginx/html/
            #configuração do proxy reverso
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        ports: 
            - 80:80
        #determina que a rede web pertence somente ao frontend
        networks: 
            - web
            #explicação na aula 60 a partir de 1:47 min.
            #depende do serviço app
        depends_on: 
            - app
    #serviço app
    app:
        image: python:3.7
        volumes: 
        #mapeando a aplicação 
            - ./app:/app
        #definindo o diretorio corrente de execução
        working_dir: /app
        #definindo o comando que quer executar
        command: bash ./app.sh
    
        #determina que a rede app tem acesso a rede banco, web e fila
        networks: 
            - banco
            - web
            - fila
        #depende do serviço db
        depends_on: 
            - db
            - queue
        environment: 
            - DB_NAME=abc_sender
    queue:
        image: redis:3.2
        networks: 
            - fila
    #criando serviço relativo ao worker
    worker:
        build: worker 
        environment: 
            - PYTHONUNBUFFERED=1
        volumes: 
            #worker
            - ./worker:/worker
        working_dir: /worker
        command: worker.py
        networks: 
            - fila
        depends_on: 
            - queue

    